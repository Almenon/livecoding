topojson=(function(){function f(o,m){var h={},n={},l={};m.forEach(function(k){var p=i(k);(h[p[0]]||(h[p[0]]=[])).push(k);(h[p[1]]||(h[p[1]]=[])).push(~k)});m.forEach(function(r){var u=i(r),v=u[0],p=u[1],t,s;if(t=l[v]){delete l[t.end];t.push(r);t.end=p;if(s=n[p]){delete n[s.start];var k=s===t?t:t.concat(s);n[k.start=t.start]=l[k.end=s.end]=k}else{if(s=l[p]){delete n[s.start];delete l[s.end];var k=t.concat(s.map(function(w){return ~w}).reverse());n[k.start=t.start]=l[k.end=s.start]=k}else{n[t.start]=l[t.end]=t}}}else{if(t=n[p]){delete n[t.start];t.unshift(r);t.start=v;if(s=l[v]){delete l[s.end];var q=s===t?t:s.concat(t);n[q.start=s.start]=l[q.end=t.end]=q}else{if(s=n[v]){delete n[s.start];delete l[s.end];var q=s.map(function(w){return ~w}).reverse().concat(t);n[q.start=s.end]=l[q.end=t.end]=q}else{n[t.start]=l[t.end]=t}}}else{if(t=n[v]){delete n[t.start];t.unshift(~r);t.start=p;if(s=l[p]){delete l[s.end];var q=s===t?t:s.concat(t);n[q.start=s.start]=l[q.end=t.end]=q}else{if(s=n[p]){delete n[s.start];delete l[s.end];var q=s.map(function(w){return ~w}).reverse().concat(t);n[q.start=s.end]=l[q.end=t.end]=q}else{n[t.start]=l[t.end]=t}}}else{if(t=l[p]){delete l[t.end];t.push(~r);t.end=v;if(s=l[v]){delete n[s.start];var k=s===t?t:t.concat(s);n[k.start=t.start]=l[k.end=s.end]=k}else{if(s=n[v]){delete n[s.start];delete l[s.end];var k=t.concat(s.map(function(w){return ~w}).reverse());n[k.start=t.start]=l[k.end=s.start]=k}else{n[t.start]=l[t.end]=t}}}else{t=[r];n[t.start=v]=l[t.end=p]=t}}}}});function i(p){var k=o.arcs[p],r=k[0],q=[0,0];k.forEach(function(s){q[0]+=s[0],q[1]+=s[1]});return[r,q]}var g=[];for(var j in l){g.push(l[j])}return g}function e(u,k,h){var g=[];if(arguments.length>1){var p=[],r;function j(n){if(n<0){n=~n}(p[n]||(p[n]=[])).push(r)}function v(i){i.forEach(j)}function s(i){i.forEach(v)}function q(i){r=i;t[i.type](i.arcs)}var t={LineString:v,MultiLineString:s,Polygon:s,MultiPolygon:function(i){i.forEach(s)}};k.type==="GeometryCollection"?k.geometries.forEach(q):q(k);p.forEach(arguments.length<3?function(o,n){g.push([n])}:function(o,n){if(h(o[0],o[o.length-1])){g.push([n])}})}else{for(var m=0,l=u.arcs.length;m<l;++m){g.push([m])}}return b(u,{type:"MultiLineString",arcs:f(u,g)})}function b(s,i){var j=s.transform,m=j.scale[0],l=j.scale[1],v=j.translate[0],t=j.translate[1],g=s.arcs;function h(A,B){if(B.length){B.pop()}for(var w=g[A<0?~A:A],z=0,E=w.length,o=0,D=0,C;z<E;++z){B.push([(o+=(C=w[z])[0])*m+v,(D+=C[1])*l+t])}if(A<0){a(B,E)}}function q(o){return[o[0]*m+v,o[1]*l+t]}function u(x){var w=[];for(var o=0,y=x.length;o<y;++o){h(x[o],w)}return w}function k(w){var o=u(w);while(o.length<4){o.push(o[0])}return o}function p(o){return o.map(k)}function n(w){w=Object.create(w);w.coordinates=r[w.type](w);return w}var r={Point:function(w){return q(w.coordinates)},MultiPoint:function(w){return w.coordinates.map(q)},LineString:function(w){return u(w.arcs)},MultiLineString:function(w){return w.arcs.map(u)},Polygon:function(w){return p(w.arcs)},MultiPolygon:function(w){return w.arcs.map(p)}};return i.type==="GeometryCollection"?(i=Object.create(i),i.geometries=i.geometries.map(n),i):n(i)}function a(m,l){var k,g=m.length,h=g-l;while(h<--g){k=m[h],m[h++]=m[g],m[g]=k}}function d(h,g){var k=0,j=h.length;while(k<j){var i=k+j>>>1;if(h[i]<g){k=i+1}else{j=i}}return k}function c(n,k){var m=[],j=k.map(function(){return[]});function h(p,o){p.forEach(function(q){if(q<0){q=~q}var r=m[q]||(m[q]=[]);if(!r[o]){r.forEach(function(t){var u,s;s=d(u=j[o],t);if(u[s]!==t){u.splice(s,0,t)}s=d(u=j[t],o);if(u[s]!==o){u.splice(s,0,o)}}),r[o]=o}})}function i(p,o){p.forEach(function(q){h(q,o)})}function l(q,p){g[q.type](q.arcs,p)}var g={LineString:h,MultiLineString:i,Polygon:i,MultiPolygon:function(p,o){p.forEach(function(q){i(q,o)})}};k.forEach(l);return j}return{version:"0.0.16",mesh:e,object:b,neighbors:c}})();
